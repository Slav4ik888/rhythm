import { ChartConfig, ChartConfigDatasets, fixPointRadius } from 'entities/charts';
import { checkInvertData, DashboardStatisticItem } from 'entities/dashboard-data';
import { ViewItem } from 'entities/dashboard-view';
import { setValue } from 'shared/lib/charts';
import { isArr, isStr } from 'shared/lib/validators';
import { calcTrend2 } from '../calc-trend-2';
import { getBackgroundColors } from './utils';




/**
 * –ù–∞–ø–æ–ª–Ω—è–µ—Ç datasets –≤—Å–µ–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –¥–∞–Ω–Ω–Ω—ã–º–∏ –¥–ª—è Doughnut
 */
export const getDataDoughnut = (
  labels    : string[],
  itemsData : DashboardStatisticItem<number>[],
  item      : ViewItem
): ChartConfig => {
  console.log("üöÄ ~ itemsData:", itemsData);
  console.log("üöÄ ~ item:", item);
  
  const config = {
    labels, // ['Red', 'Blue', 'Yellow']
    datasets: [
      {
        label: '',
        data: [...itemsData.map((itemData, idx) => {
          // –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ü—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞
          return itemData?.data[itemData?.data.length - 1] || 0
        })],
        backgroundColor: getBackgroundColors(item),
        hoverOffset: 4
      },
    ],
  };

  return config
}
